version: '3.7'

services:
  spring:
    build: .
    ports:
      - ${SPRING_EXTERNAL_PORT}:8080
    container_name: ${SPRING_CONTAINER_NAME}
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    restart: unless-stopped
    depends_on: 
      - postgres
  postgres:
    build: ./postgres
    container_name: ${POSTGRES_CONTAINER_NAME}
    ports:
      - ${POSTGRES_EXTERNAL_PORT}:5432
    networks:
      - sonarnet
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:${POSTGRES_DATA}
    restart: unless-stopped
  sonarqube:
      image: sonarqube:8.2-community
      container_name: ${SONARQUBE_CONTAINER_NAME}
      ports:
        - ${SONARQUBE_EXTERNAL_PORT}:9000
      networks:
        - sonarnet
      environment:
        SONARQUBE_JDBC_URL: jdbc:postgresql://postgres:5432/${SONARQUBE_DB}
        SONARQUBE_JDBC_USERNAME: ${SONARQUBE_USER}
        SONARQUBE_JDBC_PASSWORD: ${SONARQUBE_PASSWORD}
      volumes:
        - sonarqube_conf:${SONARQUBE_CONF}
        - sonarqube_data:${SONARQUBE_DATA}
        - sonarqube_extensions:${SONARQUBE_EXTENSIONS}
        - sonarqube_plugins:${SONARQUBE_PLUGINS}
      restart: unless-stopped
      depends_on:
        - postgres

networks:
  sonarnet:

volumes:
  postgres_data:
    driver: local
  sonarqube_conf:
    driver: local
  sonarqube_data:
    driver: local
  sonarqube_extensions:
    driver: local
  sonarqube_plugins:
    driver: local